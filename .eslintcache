[{"C:\\Users\\jaish\\OneDrive\\Desktop\\Assignment\\assignment\\src\\index.js":"1","C:\\Users\\jaish\\OneDrive\\Desktop\\Assignment\\assignment\\src\\App.js":"2","C:\\Users\\jaish\\OneDrive\\Desktop\\Assignment\\assignment\\src\\Components\\Dashboard.js":"3","C:\\Users\\jaish\\OneDrive\\Desktop\\Assignment\\assignment\\src\\Redux\\userAction.js":"4","C:\\Users\\jaish\\OneDrive\\Desktop\\Assignment\\assignment\\src\\Redux\\store.js":"5","C:\\Users\\jaish\\OneDrive\\Desktop\\Assignment\\assignment\\src\\Redux\\rootReducer.js":"6","C:\\Users\\jaish\\OneDrive\\Desktop\\Assignment\\assignment\\src\\Redux\\userTypes.js":"7","C:\\Users\\jaish\\OneDrive\\Desktop\\Assignment\\assignment\\src\\Redux\\userReducer.js":"8"},{"size":220,"mtime":1608579578479,"results":"9","hashOfConfig":"10"},{"size":506,"mtime":1608566749087,"results":"11","hashOfConfig":"10"},{"size":3803,"mtime":1608617698794,"results":"12","hashOfConfig":"10"},{"size":913,"mtime":1608579501031,"results":"13","hashOfConfig":"10"},{"size":320,"mtime":1608567294087,"results":"14","hashOfConfig":"10"},{"size":183,"mtime":1608567533673,"results":"15","hashOfConfig":"10"},{"size":177,"mtime":1608567401876,"results":"16","hashOfConfig":"10"},{"size":816,"mtime":1608579554452,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"168ke6k",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\jaish\\OneDrive\\Desktop\\Assignment\\assignment\\src\\index.js",[],["37","38"],"C:\\Users\\jaish\\OneDrive\\Desktop\\Assignment\\assignment\\src\\App.js",[],"C:\\Users\\jaish\\OneDrive\\Desktop\\Assignment\\assignment\\src\\Components\\Dashboard.js",["39","40","41","42"],"import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchUsers } from \"../Redux/userAction\";\r\nimport { Col, Input, Card, CardBody, CardText, Row } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport profile from \"../assets/profile.png\";\r\nimport \"../customStyles.css\";\r\nfunction Dashboard({ userData, fetchUsers }) {\r\n  const initialState = {\r\n    search: \"\",\r\n    data: userData.users,\r\n    apiData2: [],\r\n  };\r\n\r\n  const [state, dispatch] = React.useReducer((state, action) => {\r\n    switch (action.type) {\r\n      case \"setSearch\":\r\n        return { ...state, search: action.payload };\r\n      case \"setApiData\":\r\n        return { ...state, apiData2: action.payload };\r\n    }\r\n  }, initialState);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        \"http://my-json-server.typicode.com/shripad-agashe/fake-api/dashboard\"\r\n      )\r\n      .then((response) => {\r\n        dispatch({ type: \"setApiData\", payload: response.data });\r\n        console.log(\"CHECK API\", response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n      });\r\n  }, [dispatch]);\r\n\r\n  // FILTERING ON BEHALF OF NAME AND MARKS\r\n\r\n  const filtered = initialState.data.filter(\r\n    (item) =>\r\n      item.name.toLocaleLowerCase().includes(state.search) ||\r\n      item.marks.toString().includes(state.search)\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className=\"top-title\">\r\n        <h2>Dashboard</h2>\r\n        <p>Mobile UX/UI Design</p>\r\n      </div>\r\n      <div className=\"other-content\">\r\n        <Row>\r\n          {state.apiData2.map((item) => (\r\n            <Col sm={3}>\r\n              <div className=\"box\">\r\n                <img src={profile} />\r\n                <div className=\"content-box\">\r\n                  <h2>{item.line1}</h2>\r\n                  <p>{item.title}</p>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </div>\r\n\r\n      <Box>\r\n        <h2 className=\"student-tag\">Students By Average Marks</h2>\r\n        <div className=\"search\">\r\n          <Input\r\n            type=\"text\"\r\n            name=\"search\"\r\n            placeholder=\"Search via Marks or Name\"\r\n            value={state.search}\r\n            onChange={(e) => {\r\n              dispatch({\r\n                type: \"setSearch\",\r\n                payload: e.target.value.toLocaleLowerCase(),\r\n              });\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"content\">\r\n          {userData &&\r\n            userData.users &&\r\n            filtered.length > 0 &&\r\n            userData.users\r\n              .filter(\r\n                (users) =>\r\n                  users.name.toLocaleLowerCase().includes(state.search) ||\r\n                  users.marks.toString().includes(state.search)\r\n              )\r\n              .map((user) => (\r\n                <Col>\r\n                  <Card inverse className={`border text-dark`}>\r\n                    <CardBody className=\"d-flex justify-content-between flex-column card-material\">\r\n                      <CardText>\r\n                        <img src={profile} />\r\n                        <label className=\"name-label\">{user.name}</label>\r\n                        <span style={{ float: \"right\" }}>{user.marks}</span>\r\n                      </CardText>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              ))}\r\n        </div>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userData: state.user,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchUsers: () => dispatch(fetchUsers()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\r\n","C:\\Users\\jaish\\OneDrive\\Desktop\\Assignment\\assignment\\src\\Redux\\userAction.js",[],"C:\\Users\\jaish\\OneDrive\\Desktop\\Assignment\\assignment\\src\\Redux\\store.js",[],"C:\\Users\\jaish\\OneDrive\\Desktop\\Assignment\\assignment\\src\\Redux\\rootReducer.js",[],"C:\\Users\\jaish\\OneDrive\\Desktop\\Assignment\\assignment\\src\\Redux\\userTypes.js",[],"C:\\Users\\jaish\\OneDrive\\Desktop\\Assignment\\assignment\\src\\Redux\\userReducer.js",[],["43","44"],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":17,"column":5,"nodeType":"51","messageId":"52","endLine":22,"endColumn":6},{"ruleId":"53","severity":1,"message":"54","line":27,"column":6,"nodeType":"55","endLine":27,"endColumn":8,"suggestions":"56"},{"ruleId":"57","severity":1,"message":"58","line":62,"column":17,"nodeType":"59","endLine":62,"endColumn":38},{"ruleId":"57","severity":1,"message":"58","line":104,"column":25,"nodeType":"59","endLine":104,"endColumn":46},{"ruleId":"45","replacedBy":"60"},{"ruleId":"47","replacedBy":"61"},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array. If 'fetchUsers' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["64"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["62"],["63"],"no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},"Update the dependencies array to be: [fetchUsers]",{"range":"67","text":"68"},[830,832],"[fetchUsers]"]